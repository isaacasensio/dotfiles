# Tmux prefix key
set -g prefix C-b

# TODO: learn how this works
set-option -g focus-events on

# TODO: find a way to toggle this?
set-option -g display-time 3000

# Options to make tmux more pleasant
set -g mouse on

# I was getting this warning in neovim
# Neither Tc nor RGB capability set. True colors are disabled
# Confirm your $TERM value outside of tmux first, mine returned "screen-256color"
# echo $TERM
# set-option -sa terminal-features ',xterm-256color:RGB'
set -sg terminal-overrides ",*:RGB"
# Undercurl support (works with kitty)
# Fix found below in Folke's tokyonight theme :heart:
# https://github.com/folke/tokyonight.nvim#fix-undercurls-in-tmux
#
# After reloading the configuration, you also have to kill the tmux session for
# these changes to take effect
set -g default-terminal "${TERM}"

# https://github.com/3rd/image.nvim/?tab=readme-ov-file#tmux
# This is needed by the image.nvim plugin
set -gq allow-passthrough on
# This is related to the `tmux_show_only_in_active_window = true,` config in
# image.nvim
set -g visual-activity off

# This enables vim nagivation
# If for example I'm in the scrolling mode (yellow) can navigate with vim motions
# search with /, using v for visual mode, etc
set -g mode-keys vi

# Border lines between panes are thicker
# single -> single lines using ACS or UTF-8 characters
# double -> double lines using UTF-8 characters
# heavy  -> heavy lines using UTF-8 characters
# simple -> simple ASCII characters
# number -> the pane number
set -g pane-border-lines single

# Indicate active pane by colouring only half of the border in windows with 
# exactly two panes, by displaying arrow markers, by drawing both or neither.
# [off | colour | arrows | both]
set -g pane-border-indicators colour

# Enables tracking of focus events, allows tmux to respond when the terminal
# window gains or looses focus
set-option -g focus-events on

# New windows normally start at 0, but I want them to start at 1 instead
set -g base-index 1

# With this set to off
# when you close the last window in a session, tmux will keep the session
# alive, even though it has no windows open. You won't be detached from
# tmux, and you'll remain in the session
set -g detach-on-destroy off

# Imagine if you have windows 1-5, and you close window 3, you are left with
# 1,2,4,5, which is inconvenient for my navigation method seen below
# renumbering solves that issue, so if you close 3 youre left with 1-4
set -g renumber-windows on

# I just realized that my eyes are normally on the top left corner on the
# screen, so moving the tmux bar to the top instead of bottom
set -g status-position top

# If I'm in insert mode typing text, and press escape, it will wait this amount
# of time to switch to normal mode when I press escape
# this setting was recommended by neovim `escape-time` (default 500)
# Can be set to a lower value, like 10 for it to be faster
set-option -sg escape-time 100

# I had to set this to on for osc52 to work
# https://github.com/ojroques/nvim-osc52
set -s set-clipboard on

# Imagine if you have windows 1-5, and you close window 3, you are left with
# 1,2,4,5, which is inconvenient for my navigation method seen below
# renumbering solves that issue, so if you close 3 youre left with 1-4
set -g renumber-windows on

# Increase scroll history
set-option -g history-limit 10000

##############################################################################
##############################################################################
#
# Plugins section
#
##############################################################################
##############################################################################
set -g @plugin 'omerxx/tmux-sessionx'

# Tmux Plugin Manager (tpm), to install it, clone the repo below
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'catppuccin/tmux#latest'

# for navigating between tmux panes using Ctrl-hjkl
# If you have neovim open in a tmux pane, and another tmux pane on the right,
# you won't be able to jump from neovim to the tmux pane on the right.
#
# If you want to do jump between neovim and tmux, you need to install the same
# 'vim-tmux-navigator' plugin inside neovim
set -g @plugin 'christoomey/vim-tmux-navigator'

# persist tmux sessions after computer restart
# https://github.com/tmux-plugins/tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'
# allow tmux-ressurect to capture pane contents
set -g @resurrect-capture-pane-contents 'on'

# automatically saves sessions for you every 15 minutes (this must be the last plugin)
# https://github.com/tmux-plugins/tmux-continuum
set -g @plugin 'tmux-plugins/tmux-continuum'
# enable tmux-continuum functionality
set -g @continuum-restore 'on'
# Set the save interval in minutes, default is 15
set -g @continuum-save-interval '5'

##############################################################################
##############################################################################
#
# Configure catppuccin
#
##############################################################################
##############################################################################

set -g @catppuccin_flavor 'macchiato'
set -g @catppuccin_window_status_style "rounded"
# If you set this to off, the tmux line completely dissappears
set -g @catppuccin_status_default "on"
# This can be set to "icon" or "all" if set to "all" the entire tmux session
# name has color
set -g @catppuccin_status_fill "all"

##############################################################################
##############################################################################
#
# Bindings
#
##############################################################################
##############################################################################

# Reload the tmux configuration, display a 2 second message
unbind r
bind r source-file ~/.tmux.conf

bind '%' split-window -c '#{pane_current_path}' -h
bind '"' split-window -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key "K" display-popup -E -w 40% "sesh connect \"$(
  sesh list -i | gum filter --limit 1 --placeholder 'Pick a sesh' --prompt='‚ö°'
)\""

bind-key "J" run-shell "sesh connect \"$(
  sesh list | fzf-tmux -p 55%,60% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list)' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(‚ö°  )+reload(sesh list)'
)\""

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt (cmd+w)
bind-key e send-keys "tmux capture-pane -p -S - | nvim -c 'set buftype=nofile' +" Enter

##############################################################################
##############################################################################
#
# Status bar configuration
#
##############################################################################
##############################################################################

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
set -ag status-right "#{E:@catppuccin_status_session}"

# Initialize Tmux
run ~/.tmux/plugins/catppuccin/tmux/catppuccin.tmux

# Initialize TMUX plugin manager
# (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'